# This is a basic workflow to help you get started with Actions

name: dotnet-ci

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ release/* ]
  pull_request:
    branches: [ release/* ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
       
      - name: Set build number
        env: 
            VERSION: ${{ secrets.VERSION }}
            RUN_NUMBER: ${{ GITHUB_RUN_NUMBER }}
        run: 
             $GITHUB_RUN_ID = "$VERSION.$RUN_NUMBER";
        shell: powershell

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Update assembly version
        run: 
            ./Update-Version -fileName "$(GITHUB_WORKSPACE)/Directory.Build.props" -version "$(GITHUB_RUN_ID)";
        shell: powershell

      # Runs a single command using the runners shell
      - name: Install dependencies
        run: dotnet restore

      # Runs a set of commands using the runners shell
      - name: Build project
        run: dotnet build --configuration Release

      - name: Package project
        run: dotnet pack
